% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fregion.band.R
\name{fregion.band}
\alias{fregion.band}
\title{Makes confidence bands}
\usage{
fregion.band(x, cov, tau, t0 = NULL, N = 1, type = c("Bs", "BEc",
  "BEc1", "naive.t", "BRz", "BRz0", "KR.z", "KR.t", "FFSCB.z", "FFSCB.t"),
  conf.level = c(0.95), grid.size = 200, inv.method = "gamma.approx",
  prec = NULL, sim.size = 10000, n_int = 10, tol = NULL)
}
\arguments{
\item{x}{Functional parameter estimate. It can be either a vector or \link{fd} object from \link{fda}.}

\item{cov}{N * Cov(X), in which X is the functional estimator. It can be either matrix or \link{bifd} object from \link{fda}. The eigen decomposition of Cov(X) can be used instead.}

\item{tau}{Pointwise standard deviation of the standardized and differentiated sample functions. Can be estimated by tau_fun().}

\item{t0}{}

\item{N}{It should be '1' if 'cov' is the covariance operator for X itself, which is the default value.}

\item{type}{The band(s) to be constructed.
\itemize{
  \item FFSCB.z : Fast'n'Fair (adaptive) simultaneous confidence band based for a Gaussian functional parameter estimate.
  \item FFSCB.t : Fast'n'Fair (adaptive) simultaneous confidence band based for a t-distributed functional parameter estimate.
  \item KR.z : The constant simultaneous confidence band based on the classical Kac-Rice (KR) formula for Gaussian random functions.
  \item KR.t : The constant simultaneous confidence band based on the classical Kac-Rice (KR) formula for t-distributed random functions.
  \item BEc : The suggested modified Scheffe style band from hyper-ellipsoie Ec, which uses up to the very last dimension.
  \item BEc1 : Another modified Scheffe style band from hyper-ellipsoie Ec1. (Wider than BEc although it does not require smoothness assumption. For comparision purpose only, not recommend for use)
  \item Bs : Parametric bootstrap simultaneous confidence band, similar to the one appeard in Degras(2011) (for comparision purpose)
  \item naive.t : A collection of point-wise t-intervals. (for comparision purpose)
  \item BEPC.x : Scheffe band from 'x' dimensional chi-square ellipse. (for comparision purpose)
}}

\item{conf.level}{A vector of confidence levels for the bands to achieve.}

\item{grid.size}{This determines on how fine grid the bands will be constructed before converted as an `fd' object. This parameter is used only when 'x' is fd object and 'cov' is bifd object.}

\item{inv.method}{(Currently Not Used) This determines how the inverse of the sum of chi squares distribution will be achieved. It can be either "gamma.approx", or "inv.imhof". Currently, only "gamma.approx" works.}

\item{prec}{(Currently Not Used) This determines the accuracy of imhof. It's used only when inv.method is inv.imhof.}

\item{sim.size}{This determines bootstrap sample size for Bs}

\item{n_int}{Number of intervals for the piecewise linear confidence bounds.}

\item{tol}{Controls the tolerance value used by stats::optimize(). The default (tol=NULL) leads to the functions' default values.}
}
\value{
fregion.band Either a collection of vector valued bands or `fd' object whose objectname is changed to fregion.band.
}
\description{
Makes confidence bands
}
\examples{
# 1. Vector/matrix version

# Generate a sample
p = 200 ; N = 80 ; rangeval = c(0,1)
grid = make.grid(p, rangevals=rangeval)
mu0 = meanf.poly(grid,c(0,1)) ; names(mu0) = grid
mu = meanf.poly(grid,c(0,1.1)) ; names(mu) = grid
cov.m = make.cov.m(cov.f = covf.st.matern, grid=grid, 
cov.f.params=c(2/2,1,1))
x = make.sample(mu,cov.m,N)

# Find the estimate and covariance
hat.mu = rowMeans(x)
hat.cov.m = crossprod(t(x - hat.mu)) / (N-1)

# Make and visualize/compare confidence bands
b <- fregion.band(hat.mu, hat.cov.m, N=N, 
type=c("Bs","BEc","BEPC.10","naive.t"),
conf.level=c(0.95))
plot(b)

# 2. fd/bifd version

# create basis, convert vector/matrix into fd/bifd objects.
require(fda)
nbasis   <- round(p*0.9)
fd.basis <- create.bspline.basis(rangeval,nbasis)
mu0.fd   <- Data2fd(names(mu0),mu0,fd.basis)
mu.fd    <- Data2fd(names(mu),mu,fd.basis)
x.fd     <- Data2fd(rownames(x),x,fd.basis)
hat.mu.fd    <- mean.fd(x.fd)
hat.cov.fd   <- var.fd(x.fd)

# Make and visualize/compare confidence bands.
b.fd <- fregion.band(hat.mu.fd, hat.cov.fd, N=N, type=c("Bs","BEc"), 
conf.level=c(0.95, 0.9))
plot(b.fd)

}
